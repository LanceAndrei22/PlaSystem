package datamine_gui;

import datamine_functions.*;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

/**
 * Represents the launch panel of the application.
 */
public class LaunchPanelGUI extends JFrame {
    // Attributes for handling data
    KeycodeVerification keyValidator = new KeycodeVerification();
    
    /**
     * Constructor for LaunchPanelGUI.
     * Initializes components, sets the location, and updates the file path label.
     */
    public LaunchPanelGUI() {
        initComponents(); // Initialize GUI components
        setLocationRelativeTo(null); // Set the location of the frame to the center of the screen
        
        // Update the label with the file name obtained from DatabaseFileChooser
        filePathLabel.setText(DatabaseFileChooser.getFileName());
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        launchPanel = new JPanel();
        titleLabel = new JLabel();
        launchButton = new JButton();
        exitButton = new JButton();
        fileChooserBtn = new JToggleButton();
        filePathLabel = new JLabel();
        titleLabel1 = new JLabel();
        titleLabel2 = new JLabel();
        titleLabel3 = new JLabel();
        logoPanel = new JPanel();
        logoLabel = new JLabel();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setBackground(new Color(51, 51, 51));
        setResizable(false);

        launchPanel.setBackground(new Color(255, 153, 102));

        titleLabel.setFont(new Font("Segoe UI Symbol", 1, 60)); // NOI18N
        titleLabel.setForeground(new Color(51, 51, 51));
        titleLabel.setHorizontalAlignment(SwingConstants.CENTER);
        titleLabel.setText("Buy,");

        launchButton.setBackground(new Color(51, 51, 51));
        launchButton.setForeground(new Color(255, 255, 255));
        launchButton.setText("Launch");
        launchButton.setHorizontalTextPosition(SwingConstants.CENTER);
        launchButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                launchButtonActionPerformed(evt);
            }
        });

        exitButton.setBackground(new Color(51, 51, 51));
        exitButton.setForeground(new Color(255, 255, 255));
        exitButton.setText("Exit");
        exitButton.setHorizontalTextPosition(SwingConstants.CENTER);
        exitButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        fileChooserBtn.setBackground(new Color(51, 51, 51));
        fileChooserBtn.setForeground(new Color(255, 255, 255));
        fileChooserBtn.setText("Choose Database");
        fileChooserBtn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                fileChooserBtnActionPerformed(evt);
            }
        });

        filePathLabel.setFont(new Font("Segoe UI", 0, 10)); // NOI18N
        filePathLabel.setForeground(new Color(51, 51, 51));
        filePathLabel.setHorizontalAlignment(SwingConstants.CENTER);
        filePathLabel.setText("filepath");

        titleLabel1.setFont(new Font("Segoe UI Symbol", 1, 75)); // NOI18N
        titleLabel1.setForeground(new Color(51, 51, 51));
        titleLabel1.setHorizontalAlignment(SwingConstants.CENTER);
        titleLabel1.setText("Discover,");

        titleLabel2.setFont(new Font("Segoe UI Symbol", 1, 60)); // NOI18N
        titleLabel2.setForeground(new Color(51, 51, 51));
        titleLabel2.setHorizontalAlignment(SwingConstants.CENTER);
        titleLabel2.setText("Play");

        titleLabel3.setFont(new Font("Segoe UI Symbol", 1, 12)); // NOI18N
        titleLabel3.setForeground(new Color(51, 51, 51));
        titleLabel3.setHorizontalAlignment(SwingConstants.CENTER);
        titleLabel3.setText("VERSION 1.0");
        titleLabel3.setToolTipText("");

        GroupLayout launchPanelLayout = new GroupLayout(launchPanel);
        launchPanel.setLayout(launchPanelLayout);
        launchPanelLayout.setHorizontalGroup(
            launchPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, launchPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(launchPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(GroupLayout.Alignment.TRAILING, launchPanelLayout.createSequentialGroup()
                        .addGroup(launchPanelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                            .addComponent(exitButton, GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                            .addComponent(launchButton, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(97, 97, 97))
                    .addGroup(GroupLayout.Alignment.TRAILING, launchPanelLayout.createSequentialGroup()
                        .addComponent(titleLabel)
                        .addGap(18, 18, 18)
                        .addComponent(titleLabel2)
                        .addGap(72, 72, 72))))
            .addGroup(GroupLayout.Alignment.TRAILING, launchPanelLayout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(launchPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(filePathLabel, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, 399, GroupLayout.PREFERRED_SIZE)
                    .addGroup(GroupLayout.Alignment.TRAILING, launchPanelLayout.createSequentialGroup()
                        .addComponent(fileChooserBtn)
                        .addGap(137, 137, 137))
                    .addGroup(GroupLayout.Alignment.TRAILING, launchPanelLayout.createSequentialGroup()
                        .addComponent(titleLabel1)
                        .addGap(31, 31, 31))
                    .addGroup(GroupLayout.Alignment.TRAILING, launchPanelLayout.createSequentialGroup()
                        .addComponent(titleLabel3, GroupLayout.PREFERRED_SIZE, 80, GroupLayout.PREFERRED_SIZE)
                        .addGap(158, 158, 158))))
        );
        launchPanelLayout.setVerticalGroup(
            launchPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(launchPanelLayout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(titleLabel3)
                .addGap(18, 18, 18)
                .addComponent(titleLabel1)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(launchPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(titleLabel2)
                    .addComponent(titleLabel, GroupLayout.PREFERRED_SIZE, 81, GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addComponent(launchButton, GroupLayout.PREFERRED_SIZE, 66, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(exitButton, GroupLayout.PREFERRED_SIZE, 56, GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addComponent(fileChooserBtn)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filePathLabel)
                .addContainerGap())
        );

        logoPanel.setBackground(new Color(51, 51, 51));

        logoLabel.setBackground(new Color(51, 51, 51));
        logoLabel.setIcon(new ImageIcon(getClass().getResource("/datamine_main/datamineLogo.png"))); // NOI18N

        GroupLayout logoPanelLayout = new GroupLayout(logoPanel);
        logoPanel.setLayout(logoPanelLayout);
        logoPanelLayout.setHorizontalGroup(
            logoPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(logoPanelLayout.createSequentialGroup()
                .addComponent(logoLabel, GroupLayout.PREFERRED_SIZE, 509, GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        logoPanelLayout.setVerticalGroup(
            logoPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(logoLabel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(logoPanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(launchPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(logoPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(launchPanel, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Handles the action performed when the launch button is clicked.
     * It verifies the key code and launches the main program if validated.
     */
    private void launchButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_launchButtonActionPerformed 
        // Check if the keycode file is visible; if so, return
        if(keyValidator.isKeycodeFileVisible()){
            return;
        }
        
        // Check if the keycode file is empty; if empty, launch the main program
        if (keyValidator.isKeycodeFileEmpty()) {
            launchMainProgram();
        } else {
            // Prompt the user to input the keycode
            String userInput = JOptionPane.showInputDialog(null, "Enter Keycode:");
            if (userInput != null) {
                // Validate the entered keycode
                boolean isValidKeycode = keyValidator.verifyKeycode(userInput);
                if (isValidKeycode) {
                    launchMainProgram();
                } else {
                    // Show error message for incorrect keycode, prompt again
                    JOptionPane.showMessageDialog(null, "Incorrect Keycode! Please try again.","Error", JOptionPane.ERROR_MESSAGE);
                    launchButtonActionPerformed(evt); // Recursive call to prompt again
                }
            }
        }
    }//GEN-LAST:event_launchButtonActionPerformed
    
    /**
     * Handles the action performed when the exit button is clicked.
     * Exits the program.
     */
    private void exitButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed                                           
        System.exit(0); // Close the application
    }//GEN-LAST:event_exitButtonActionPerformed
    
    /**
     * Handles the action performed when the file chooser button is clicked.
     * Invokes the file chooser to select a file and updates the file path label.
     */
    private void fileChooserBtnActionPerformed(ActionEvent evt) {//GEN-FIRST:event_fileChooserBtnActionPerformed                                               
        DatabaseFileChooser.chooseFile(); // Open file chooser
        filePathLabel.setText(DatabaseFileChooser.getFileName()); // Update file path label
    }//GEN-LAST:event_fileChooserBtnActionPerformed
    
    /**
     * Launches the main program GUI, sets it visible, and disposes of the current frame.
     */
    private void launchMainProgram() {
        JFrame mainProgram = new MainProgramGUI(); // Create an instance of the main program GUI
        mainProgram.setVisible(true); // Set the main program frame visible
        this.dispose(); // Dispose of the current frame (LaunchPanelGUI)
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton exitButton;
    private JToggleButton fileChooserBtn;
    private JLabel filePathLabel;
    private JButton launchButton;
    private JPanel launchPanel;
    private JLabel logoLabel;
    private JPanel logoPanel;
    private JLabel titleLabel;
    private JLabel titleLabel1;
    private JLabel titleLabel2;
    private JLabel titleLabel3;
    // End of variables declaration//GEN-END:variables                   
}