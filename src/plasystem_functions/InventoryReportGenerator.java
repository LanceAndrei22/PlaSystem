package plasystem_functions;

import javax.swing.*;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

/**
 * Handles the generation of inventory reports in CSV format.
 */
public class InventoryReportGenerator {
    private static final String REPORTS_DIRECTORY = "inventory_reports";
    private final List<ProductData> productList;
    private final String[] HEADERS = {"ID", "Name", "Brand", "Size", "Type", "Price", "Quantity", "Restock Value"};

    /**
     * Constructor initializing the product list for report generation.
     *
     * @param productList The list of products to include in the report.
     */
    public InventoryReportGenerator(List<ProductData> productList) {
        this.productList = productList;
    }

    /**
     * Generates a CSV inventory report after prompting the user for confirmation.
     *
     * @param parent The parent JFrame for displaying dialogues.
     */
    public void generateReport(JFrame parent) {
        // Prompt user to confirm export
        int choice = JOptionPane.showConfirmDialog(
                parent,
                "Do you want to export the inventory report as a CSV file?",
                "Export Inventory Report",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE
        );

        if (choice != JOptionPane.YES_OPTION) {
            return; // User cancelled or selected No
        }

        // Create inventory_reports directory if it doesn't exist
        File reportsDir = new File(REPORTS_DIRECTORY);
        if (!reportsDir.exists()) {
            reportsDir.mkdirs();
        }

        // Generate filename with specific format: InventoryReport_YYYY-MM-DD_HHMMSS
        String timestamp = new SimpleDateFormat("yyyy-MM-dd_HHmmss").format(new Date());
        String filePath = REPORTS_DIRECTORY + "/InventoryReport_" + timestamp + ".csv";

        try {
            generateCSVReport(filePath);
            JOptionPane.showMessageDialog(parent,
                    "Report generated successfully at: " + filePath,
                    "Success",
                    JOptionPane.INFORMATION_MESSAGE);
        } catch (IOException e) {
            JOptionPane.showMessageDialog(parent,
                    "Error generating report: " + e.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * Generates a CSV report with the inventory data.
     *
     * @param filePath The path where the CSV file will be saved.
     * @throws IOException If an error occurs during file writing.
     */
    private void generateCSVReport(String filePath) throws IOException {
        try (FileWriter writer = new FileWriter(filePath)) {
            // Write header
            writer.write("Inventory Report\n");
            writer.write("Generated by PlaSystem\n");
            writer.write("Total Different Products: " + productList.size() + "\n\n");

            // Write column headers
            writer.write(String.join(",", HEADERS) + ",Low Stock\n");

            // Write data rows
            for (ProductData product : productList) {
                String[] row = {
                        String.valueOf(product.getProductId()),
                        product.getProductName(),
                        product.getProductBrand(),
                        product.getProductSize(),
                        product.getProductType(),
                        String.valueOf(product.getProductPrice()), // Plain double representation
                        String.valueOf(product.getProductQuantity()),
                        String.valueOf(product.getProductRestockValue()),
                        product.getProductQuantity() <= product.getProductRestockValue() ? "Yes" : "No"
                };
                writer.write(String.join(",", row) + "\n");
            }
        }
    }
}