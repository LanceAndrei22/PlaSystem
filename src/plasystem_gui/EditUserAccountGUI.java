package plasystem_gui;

import plasystem_functions.UserAccountData;
import plasystem_functions.UserAccountDataManager;
import javax.swing.*;

/**
 * A graphical user interface (GUI) window for editing existing user accounts in the application.
 * This class provides input fields pre-populated with user account details and handles validation
 * and submission of updated data to the user account data model.
 */
public class EditUserAccountGUI extends JFrame {
    /** The parent UserAccountsGUI instance used to refresh the user accounts table after editing a user. */
    private UserAccountsGUI parentGUI;
    /** The UserAccountDataManager instance responsible for handling user account database operations. */
    private UserAccountDataManager userAccountDataModel;
    /** The UserAccountData object containing the details of the user account to be edited. */
    private UserAccountData userAccount;
    
    /**
     * Default constructor that initializes the EditUserAccountGUI.
     * Centers the window on the screen and sets up the form components.
     */
    public EditUserAccountGUI() {
        // Initialize the GUI components defined in the form
        initComponents();
        // Center the window on the screen
        setLocationRelativeTo(null);
    }
    
    /**
     * Constructor that initializes the EditUserAccountGUI with existing user account data.
     * Sets up the form components, centers the window, and pre-populates fields with user account data.
     *
     * @param parentGUI The UserAccountsGUI instance to refresh the user accounts table
     * @param userAccountDataManager The UserAccountDataManager instance to handle database operations
     * @param userAccount The UserAccountData object containing the user account details to edit
     */
    public EditUserAccountGUI(UserAccountsGUI parentGUI, UserAccountDataManager userAccountDataManager, UserAccountData userAccount) {
        // Assign the parent GUI for table refresh
        this.parentGUI = parentGUI;
        // Assign the data manager for database operations
        this.userAccountDataModel = userAccountDataManager;
        // Assign the user account data to be edited
        this.userAccount = userAccount;
        // Initialize the GUI components defined in the form
        initComponents();
        // Center the window on the screen
        setLocationRelativeTo(null);
        
        // Pre-populate input fields with existing user account data
        usernameTxtField.setText(userAccount.getUsername());
        passwordTxtField.setText(userAccount.getUserPassword());
        roleComboBox.setSelectedItem(userAccount.getUserRole());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textFieldsPanel = new javax.swing.JPanel();
        usernameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        roleLabel = new javax.swing.JLabel();
        usernameTxtField = new javax.swing.JTextField();
        passwordTxtField = new javax.swing.JTextField();
        roleComboBox = new javax.swing.JComboBox<>();
        TitleText = new javax.swing.JLabel();
        Design = new javax.swing.JLabel();
        saveBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        textFieldsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        usernameLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        usernameLabel.setText("USERNAME");

        passwordLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        passwordLabel.setText("PASSWORD");

        roleLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        roleLabel.setText("ROLE");

        roleComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "admin", "cashier", "restocker", "store_manager", "inventory_manager" }));

        javax.swing.GroupLayout textFieldsPanelLayout = new javax.swing.GroupLayout(textFieldsPanel);
        textFieldsPanel.setLayout(textFieldsPanelLayout);
        textFieldsPanelLayout.setHorizontalGroup(
            textFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(textFieldsPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(textFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(usernameLabel)
                    .addComponent(passwordLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(textFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(usernameTxtField, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                    .addComponent(passwordTxtField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(roleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(roleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        textFieldsPanelLayout.setVerticalGroup(
            textFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(textFieldsPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(textFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameLabel)
                    .addComponent(roleLabel)
                    .addComponent(usernameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(textFieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel)
                    .addComponent(passwordTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        TitleText.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        TitleText.setForeground(new java.awt.Color(255, 255, 255));
        TitleText.setText("Edit User Accounts");

        Design.setBackground(new java.awt.Color(255, 204, 102));
        Design.setOpaque(true);

        saveBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        saveBtn.setText("SAVE");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        cancelBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cancelBtn.setText("CANCEL");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(TitleText)
                        .addComponent(textFieldsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(Design, javax.swing.GroupLayout.DEFAULT_SIZE, 439, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addComponent(TitleText)
                .addGap(18, 18, 18)
                .addComponent(textFieldsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(Design, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 192, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Handles the action when the "Save" button is clicked.
     * Validates user input, confirms the changes, and updates the user account in the data model.
     * Refreshes the parent GUI table and closes the window upon successful update.
     *
     * @param evt The ActionEvent triggered by clicking the "Save" button
     */
    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        // Retrieve and trim input values from text fields and combo box
        String username = usernameTxtField.getText().trim();
        String password = passwordTxtField.getText().trim();
        String role = (String) roleComboBox.getSelectedItem();

        // Validate that all fields are filled
        if (username.isEmpty() || password.isEmpty() || role == null) {
            // Display error message if any field is empty
            JOptionPane.showMessageDialog(this, 
                "Please fill in all fields.",
                "Input Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Prompt user to confirm saving changes for the user account
        int confirm = JOptionPane.showConfirmDialog(this, 
            "Are you sure you want to save changes for the user '" + username + "' with role '" + role + "'?",
            "Confirm Edit User", 
            JOptionPane.YES_NO_OPTION, 
            JOptionPane.QUESTION_MESSAGE);
        
        // Proceed only if user confirms (selects "Yes")
        if (confirm == JOptionPane.YES_OPTION) {
            // Attempt to update the user account in the data model
            boolean success = userAccountDataModel.updateUserAccount(userAccount.getUsername(), username, password, role);
            if (success) {
                // Display success message
                JOptionPane.showMessageDialog(this, 
                    "User account updated successfully!",
                    "Success", 
                    JOptionPane.INFORMATION_MESSAGE);
                // Refresh the parent GUI table if parentGUI is not null
                if (parentGUI != null) {
                    parentGUI.refreshTable();
                }
                // Close the window
                dispose();
            }
        }
    }//GEN-LAST:event_saveBtnActionPerformed
    
    /**
     * Handles the action when the "Cancel" button is clicked.
     * Closes the current window without saving any changes.
     *
     * @param evt The ActionEvent triggered by clicking the "Cancel" button
     */
    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        // Close the current window, discarding any changes
        dispose();
    }//GEN-LAST:event_cancelBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Design;
    private javax.swing.JLabel TitleText;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JTextField passwordTxtField;
    private javax.swing.JComboBox<String> roleComboBox;
    private javax.swing.JLabel roleLabel;
    private javax.swing.JButton saveBtn;
    private javax.swing.JPanel textFieldsPanel;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JTextField usernameTxtField;
    // End of variables declaration//GEN-END:variables
}
