/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package plasystem_gui;

import plasystem_functions.DataHandling;
import plasystem_functions.ProductData;
import java.util.*;
import javax.swing.*;
import javax.swing.table.*;
import java.awt.*;
import java.awt.event.*;

/**
 *
 * @author mjbal
 */
public class RestockGUI2 extends javax.swing.JFrame {
    
    private DataHandling dataHandler;
    private LinkedList<ProductData> productList;
    private String filePath;

    /**
     * Creates new form RestockGUI2
     * @param productList1
     * @param plasystemTbl
     * @param filePath
     */
    public RestockGUI2(LinkedList<ProductData> productList1, JTable plasystemTbl, String filePath) {
        this.filePath = filePath;
        this.dataHandler = new DataHandling(filePath);
        this.productList = filterRestockItems(dataHandler.getList());

        initComponents();
        setLocationRelativeTo(null);
    }
    
    
    private LinkedList<ProductData> filterRestockItems(LinkedList<ProductData> fullList) {
        LinkedList<ProductData> restockItems = new LinkedList<>();
        for (ProductData product : fullList) {
            if (product.getProductRestockvalue() < 45) {
                restockItems.add(product);
            }
        }
        return restockItems;
    }
    
    private void populateTable() {
        DefaultTableModel model = new DefaultTableModel(
            new Object[]{"Select", "Product ID", "Name", "Current Qty", "Restock Value", "Incoming Qty"}, 0) {
            @Override
            public Class<?> getColumnClass(int columnIndex) {
                return columnIndex == 0 ? Boolean.class : super.getColumnClass(columnIndex);
            }

            @Override
            public boolean isCellEditable(int row, int column) {
                return column == 0 || column == 5; // Checkboxes and Incoming Quantity are editable
            }
        };

        for (ProductData product : productList) {
            model.addRow(new Object[]{false, product.getProductID(), product.getProductName(), product.getProductQuantity(), product.getProductRestockvalue(), 0});
        }

        jTable2.setModel(model);
        jTable2.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTable2.getColumnModel().getColumn(5).setPreferredWidth(100);
    }
    
    private void restockItems() {
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        boolean updated = false;

        for (int i = 0; i < model.getRowCount(); i++) {
            boolean selected = (boolean) model.getValueAt(i, 0);
            int incomingQty = (int) model.getValueAt(i, 5);

            if (selected && incomingQty > 0) {
                String productId = (String) model.getValueAt(i, 1);

                for (ProductData product : productList) {
                    if (product.getProductID().equals(productId)) {
                        product.setProductQuantity(product.getProductQuantity() + incomingQty);
                        updated = true;
                        break;
                    }
                }
            }
        }

        if (updated) {
            DataHandling.saveInventoryChanges(productList, filePath);
            JOptionPane.showMessageDialog(this, "Restocking successful!", "Success", JOptionPane.INFORMATION_MESSAGE);
            dispose();
        } else {
            JOptionPane.showMessageDialog(this, "No items selected or invalid quantities!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        restockBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(2600, 1300));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Select", "Product ID", "Name", "Current Qty", "Restock Value", "Incoming Qty"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable2.setColumnSelectionAllowed(true);
        jScrollPane2.setViewportView(jTable2);
        jTable2.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        restockBtn.setText("jButton1");

        cancelBtn.setText("jButton2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 682, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(212, 212, 212)
                        .addComponent(restockBtn)
                        .addGap(67, 67, 67)
                        .addComponent(cancelBtn)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(restockBtn)
                    .addComponent(cancelBtn))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBtn;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton restockBtn;
    // End of variables declaration//GEN-END:variables
}
